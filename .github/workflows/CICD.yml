name: CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Environment Variables
        run: |
          echo "SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> $GITHUB_ENV
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Docker
        run: docker build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/meolaeng_server .
      - name: Push Docker
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/meolaeng_server:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set target IP
        run: |
          STATUS=$(curl -o /dev/null -w "%{http_code}" "http://${{ secrets.MEOLAENG_SERVER_IP }}/env")
          echo $STATUS
          if [ $STATUS = 200 ]; then
            CURRENT_UPSTREAM=$(curl -s "http://${{ secrets.MEOLAENG_SERVER_IP }}/env")
            echo "Detected current upstream: $CURRENT_UPSTREAM"
          else
            echo "Defaulting to green deployment"
            CURRENT_UPSTREAM=green
          fi
          echo "CURRENT_UPSTREAM=$CURRENT_UPSTREAM" >> $GITHUB_ENV

          if [ "$CURRENT_UPSTREAM" = "blue" ]; then
            echo "TARGET_UPSTREAM=green" >> $GITHUB_ENV
            echo "CURRENT_PORT=8081" >> $GITHUB_ENV
            echo "STOPPED_PORT=8080" >> $GITHUB_ENV
          else
            echo "TARGET_UPSTREAM=blue" >> $GITHUB_ENV
            echo "CURRENT_PORT=8080" >> $GITHUB_ENV
            echo "STOPPED_PORT=8081" >> $GITHUB_ENV
          fi
      - name: SSH to Server and Pull Latest Docker Image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.MEOLAENG_SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/meolaeng_server:latest
            sudo docker-compose -f docker-compose-${{ env.TARGET_UPSTREAM }}.yml down
            sudo docker-compose -f docker-compose-${{ env.TARGET_UPSTREAM }}.yml up -d

      - name: Wait for Application to be ready
        run: |
          for i in {1..10}; do
            STATUS_CODE=$(curl -o /dev/null -w "%{http_code}" "http://${{ secrets.MEOLAENG_SERVER_IP }}:${{ env.CURRENT_PORT }}/env" || true)
            echo "Attempt $i: Status code is $STATUS_CODE"
            if [ "$STATUS_CODE" -eq 200 ]; then
              echo "Service is ready."
              break
            fi
            echo "Waiting for service to be ready..."
            sleep 10
          done

      - name: Verify Deployment
        uses: jtalk/url-health-check-action@v3
        with:
          url: "http://${{ secrets.MEOLAENG_SERVER_IP }}:${{ env.CURRENT_PORT }}/env"
          max-attempts: 5
          retry-delay: 10s

      - name: Update Nginx Configuration and Reload
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.MEOLAENG_SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker exec -i nginxserver bash -c 'echo "set \$service_url http://${{ env.TARGET_UPSTREAM }}:${{ env.CURRENT_PORT }};" > /etc/nginx/conf.d/service-env.inc && nginx -s reload'
